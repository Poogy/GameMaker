<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_char</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//options:
grav=.4
spd=4
jump=10

//control:
vspd=0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//movement:
if spd!=0
{
  if place_free(x+(keyboard_check(vk_right)-keyboard_check(vk_left))*spd,y)
  { //move if we can
    x+=(keyboard_check(vk_right)-keyboard_check(vk_left))*spd
  }
  else
  {
    for(i=1;i&lt;=8;i+=1)
    { //allow for slopes
      if place_free(x+(keyboard_check(vk_right)-keyboard_check(vk_left))*spd,y-i)
      {
        x+=(keyboard_check(vk_right)-keyboard_check(vk_left))*spd
        y-=i
        i=99
      }
    }
    if i!=100
    { //move partially if we're less than spd from the wall
      for(i=spd;i&gt;0;i-=1)
      {
        if place_free(x+(keyboard_check(vk_right)-keyboard_check(vk_left))*i,y)
        {
          x+=(keyboard_check(vk_right)-keyboard_check(vk_left))*i
          i=0
        }
      }
    }
  }
}

if (keyboard_check_pressed(vk_up) &amp;&amp; instance_place(x,y+1,o_platform_parent))
{ //jump
  vspd=-jump
}

//control custom gravity and vspeed:
if vspd!=0
{
  if !instance_place(x,y+vspd,o_platform_parent)
  { //same as vspeed, but with our own variables
    y+=vspd
  }
  else if ((vspd&gt;0 and instance_place(x,y+vspd,o_platform_oneway) and !instance_place(x,y,o_platform_oneway)) or !instance_place(x,y+vspd,o_platform_oneway))
  { //the above is an exception for one-way platforms
    if vspd&gt;0
    {
      move_contact_all(270,vspd)
    }
    else
      move_contact_all(90,abs(vspd))
    vspd=0
  }
  else
    y+=vspd
}

if (!instance_place(x,y+1,o_platform_parent) or instance_place(x,y,o_platform_oneway))
{
  vspd+=grav
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
