<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Liste
enum items
{
health_potion,
mana_potion,
poison,
rock
}
//Sprites
sprite[items.health_potion] = spr_item_health_potion;
sprite[items.mana_potion]   = spr_item_mana_potion;
sprite[items.poison]        = spr_item_poison;
sprite[items.rock]          = spr_item_rock;

//Scripts
script[items.health_potion] = scr_use_health_potion;
script[items.mana_potion]   = scr_use_mana_potion;
script[items.poison]        = scr_use_poison;
script[items.rock]          = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Inventory
slot_number = 20;
inventory_width = 4;
//inventory_height = ;

for(var i = 0; i &lt; slot_number; i++)
{
 slot[i] = noone;
 slot_n[i] = 0;
}

//Preset Items
slot[0]   = items.mana_potion;
slot_n[0] = 5;
slot[1]   = items.rock;
slot_n[1] = 15;
slot[5]   = items.rock;
slot_n[5] = 2;
slot[7]   = items.poison;
slot_n[7] = 2;
slot[15]  = items.health_potion;
slot_n[15]= 6;

mouse_slot = noone;
mouse_slot_n = 0;

x_off = 500;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx = (mouse_x - x_off) div 64;
var yy = (mouse_y div 64);

var slot_clicked = xx + (yy*4);

if ((mouse_x &gt; x_off) and (mouse_x &lt; x_off + inventory_width * 64) and (mouse_y &gt; 0) and (mouse_y &lt; (slot_number / inventory_width) * 64))
{
 if scr_add_item(slot_clicked, mouse_slot, mouse_slot_n)
 {
 mouse_slot = noone;
 mouse_slot_n = 0;
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt; x_off) and (mouse_x &lt; x_off + inventory_width * 64) and (mouse_y &gt; 0) and (mouse_y &lt; (slot_number / inventory_width) * 64) and (mouse_slot == noone)
{
 var xx = (mouse_x - x_off) div 64;
 var yy = (mouse_y div 64);

 var slot_clicked = xx + (yy*4);
 
 if script[slot[slot_clicked]] != noone
 {
  script_execute(script[slot[slot_clicked]], slot_clicked);
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_slot == noone) and (mouse_x &gt; x_off) and (mouse_x &lt; x_off + inventory_width * 64) and (mouse_y &gt; 0) and (mouse_y &lt; (slot_number / inventory_width) * 64)
{
 var xx = (mouse_x - x_off) div 64;
 var yy = (mouse_y div 64);

 var slot_clicked = xx + (yy*4);

 mouse_slot = slot[slot_clicked];
 mouse_slot_n = slot_n[slot_clicked];
 slot[slot_clicked] = noone;
 slot_n[slot_clicked] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Inventory
for(var i = 0; i &lt; slot_number; i++)
{
 var xx = i mod inventory_width;
 var yy = i div inventory_width;
 
 draw_sprite_ext(spr_slot, 0, x_off + xx * 64, yy * 64, 2, 2, 0, c_white, 1);
 
 if slot[i] != noone
 {
  draw_sprite_ext(sprite[slot[i]], 0, x_off + xx * 64 +16, yy * 64 +16, 2, 2, 0, c_white, 1);
  draw_set_font(fnt_stack);
  draw_set_color(c_white);
  draw_text(x_off + xx * 64, yy * 64, string(slot_n[i]));
 }
}

if mouse_slot != noone
{
 draw_sprite_ext(sprite[mouse_slot], 0, mouse_x, mouse_y, 2, 2, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
