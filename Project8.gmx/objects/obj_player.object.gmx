<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
//phy_fixed_rotation = true

hp_player = 100;
hp_player_max = 100;
mp_player = 100;
mp_player_max = 100;
armor_player = 100;
armor_player_max = 100;
armor_player_reduction = 0.1;

spd = 400;
jumping = false;
jspd = -360;
cspd = 10;
lvl = 1;
xp = 0;
xp_previous = 10/3
xp_max = xp_previous*(1.5*lvl)
sp = 10;
cd_skill_01 = 0;
cd_punch = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particles

//Particle system for lvl-up
parsys_xp = part_system_create();
partype_xp = part_type_create();
parem_xp = part_emitter_create(parsys_xp);

//Particle Functions for lvl-up
part_type_shape(partype_xp,pt_shape_spark);
part_type_size(partype_xp,0.25,0.75,-0.01,0);
part_type_scale(partype_xp,1,1);

part_type_alpha2(partype_xp,0.2,1);
part_type_speed(partype_xp,0.1,0.4,0,0);
part_type_direction(partype_xp,0,359,0,0);
part_type_blend(partype_xp,true);

part_type_gravity(partype_xp,0.2,90);
part_type_orientation(partype_xp,0,90,0,0,true);
part_type_colour_rgb(partype_xp,0,255,0,255,0,255);

part_type_life(partype_xp,120,180);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventar
sword = -1; //Kein Schwert
damage = 1; //Damage-Wert
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Double Jump Timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Skill1 + Skill2 Cooldown
cd_skill_01=0;
cd_punch=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stats
if armor_player &lt; 0 {armor_player = 0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controlls
//Scripts
scr_get_input();

//Bg animation
background_x[0] = -phy_position_x/5;
background_y[0] = -phy_position_y/5;

//Movement
if key_left  {physics_apply_force(x,y,-spd,-20); direction = 180};
if key_right {physics_apply_force(x,y,spd,-20); direction = 0};
if key_jump  {
   if place_meeting(x,y+1,obj_wall){
      jumping = true;
      alarm[1] = 6
      physics_apply_impulse(x,y,0, jspd);
      }
   if jumping &amp;&amp; alarm[1] &lt; 0 {
      jumping = false;
      physics_apply_impulse(x,y,0, jspd);
      }
}
//Stats bzw. death xD
if hp_player &lt;= 0 {game_restart()}

//Spell1
if (mouse_click &amp;&amp; cd_skill_01=0) {
instance_create(x,y,obj_spell_01);
cd_skill_01 = 1;
alarm[0]=180;
}
//Punch
if (punch_key &amp;&amp; cd_punch = 0)
{
    if (key_left)
    {
        instance_create(x-16,y,obj_punch);
        with obj_punch image_angle = 180;
        cd_punch = 1;
    }
    if (key_right)
    {
        instance_create(x+16,y,obj_punch);
        cd_punch = 1;
    }
    if (key_left &amp;&amp; key_right )
    {
        instance_create(x,y-16,obj_punch);
        with obj_punch image_angle = 270;
        cd_punch = 1;
    }
        if (!key_left &amp;&amp; !key_right )
    {
        instance_create(x,y-16,obj_punch);
        with obj_punch image_angle = 270;
        cd_punch = 1;
    }
    alarm[0]=180;
}
/*
//Ladder
if place_meeting(x,y,obj_ladder){
   y = phy_position_y;   
}

if (place_meeting(x,y,obj_ladder) &amp;&amp; key_jump){
   phy_speed_y = cspd;
}
if (place_meeting(x,y,obj_ladder) &amp;&amp; key_down){
   phy_speed_y = -cspd;
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Level System
//Skill-menu
if (skill_key &amp;&amp; instance_exists(obj_skill)) {
with obj_skill do instance_destroy()
with obj_skillup_01 do instance_destroy()
with obj_skillup_02 do instance_destroy()
} else if skill_key &amp;&amp; !instance_exists(obj_skill){
  instance_create(100,100,obj_skill)
}
//Level-Up!
if xp == xp_max{
   xp_max = xp_previous
   lvl += 1;
   sp += 10;
   xp = 0;
   
   part_emitter_region(parsys_xp,parem_xp,x-16,x+16,y+16,y+16,ps_shape_rectangle,ps_distr_invgaussian);
   part_emitter_burst(parsys_xp,parem_xp,partype_xp,50 + irandom(50));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventar
if (sword != -1) { //Schwert haben
   damage = scr_get_item_value(sword, 'damage'); //Dmg vom schwert verwenden
} else {
   damage = 1; //wenn net dann 1 was im create event steht
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventar
if (sword != -1) {
   draw_sprite_ext(scr_get_item_value(sword, 'sprite'),0, x, y, 1, 1, image_angle, c_white, 1);
}
scr_draw_shadow(4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>2.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>2.5</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>64,32</point>
    <point>64,64</point>
    <point>32,64</point>
  </PhysicsShapePoints>
</object>
